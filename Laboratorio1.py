# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KijTf1dy8urPKj4qXHEllXXXRQLXsM6s
"""

#Sistemas Expertos
#Laboratorio 1
#Milena Rojas Leiva B76703
#Trabajo realizado con la ayuda de ChatGPT

# Importar las bibliotecas necesarias
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score


# Generación de datos sintéticos
np.random.seed(0)  # Para reproducibilidad
tamaño = np.random.rand(100, 1) * 125  # Tamaño de las viviendas en metros cuadrados
precio = (tamaño * 4) + (np.random.rand(100, 1) * 100)  # Precio de las viviendas en miles de dólares


# Convertir los datos a un DataFrame de pandas
data = pd.DataFrame(data=np.hstack((tamaño, precio)), columns=['tamaño', 'precio'])


# Explorar y visualizar los datos
plt.scatter(data['tamaño'], data['precio'])
plt.title('Relación entre tamaño y precio de la vivienda')
plt.xlabel('Tamaño (m^2)')
plt.ylabel('Precio ($)')
plt.show()

# Preprocesamiento de Datos
X = data['tamaño'].values.reshape(-1, 1)  # Característica (variable independiente)
y = data['precio'].values  # Variable dependiente

# Dividir el dataset en entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Construcción del Modelo
model = LinearRegression()
# Entrenar el modelo
model.fit(X_train, y_train)

# Evaluación del Modelo
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Error cuadrático medio (MSE):", mse)
print(f"Coeficiente de determinación (R²):", r2)

# Visualización
plt.scatter(X_test, y_test, color='black')
plt.plot(X_test, y_pred, color='blue', linewidth=3)
plt.title('Regresión lineal simple')
plt.xlabel('Tamaño (m^2)')
plt.ylabel('Precio ($)')
plt.show()